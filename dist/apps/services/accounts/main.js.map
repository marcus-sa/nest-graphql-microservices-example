{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/services/accounts/src/app/accounts.module.ts","webpack:///./apps/services/accounts/src/app/accounts.resolver.ts","webpack:///./apps/services/accounts/src/main.ts","webpack:///./libs/distributed/src/index.ts","webpack:///./libs/distributed/src/lib/decorators/index.ts","webpack:///./libs/distributed/src/lib/decorators/resolve-reference.decorator.ts","webpack:///./libs/distributed/src/lib/graphql-distributed-gateway.module.ts","webpack:///./libs/distributed/src/lib/graphql-distributed.factory.ts","webpack:///./libs/distributed/src/lib/graphql-distributed.module.ts","webpack:///./libs/distributed/src/lib/interfaces/index.ts","webpack:///./libs/distributed/src/lib/services/index.ts","webpack:///./libs/distributed/src/lib/services/references-explorer.service.ts","webpack:///./libs/distributed/src/lib/tokens.ts","webpack:///external \"@apollo/federation\"","webpack:///external \"@apollo/gateway\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/core/helpers/external-context-creator\"","webpack:///external \"@nestjs/core/metadata-scanner\"","webpack:///external \"@nestjs/graphql\"","webpack:///external \"@nestjs/graphql/dist/factories/params.factory\"","webpack:///external \"@nestjs/graphql/dist/graphql-schema-builder\"","webpack:///external \"@nestjs/graphql/dist/graphql.constants\"","webpack:///external \"@nestjs/graphql/dist/services/base-explorer.service\"","webpack:///external \"@nestjs/graphql/dist/services/delegates-explorer.service\"","webpack:///external \"@nestjs/graphql/dist/services/resolvers-explorer.service\"","webpack:///external \"@nestjs/graphql/dist/services/scalars-explorer.service\"","webpack:///external \"@nestjs/graphql/dist/utils/extend.util\"","webpack:///external \"@nestjs/graphql/dist/utils/generate-token.util\"","webpack:///external \"@nestjs/graphql/dist/utils/merge-defaults.util\"","webpack:///external \"@nestjs/graphql/dist/utils/remove-temp.util\"","webpack:///external \"apollo-server-express\"","webpack:///external \"rxjs\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { GraphqlDistributedModule } from '@fsgme/distributed';\n\nimport { GqlAccountsConfigService } from './graphql-accounts-config.service';\nimport { AccountsResolver } from './accounts.resolver';\n\n@Module({\n  imports: [\n    /*GraphQLModule.forRootAsync({\n      useClass: GqlAccountsConfigService,\n    }),*/\n    GraphqlDistributedModule.forRoot({\n      typePaths: ['**/*.graphql']\n    }),\n  ],\n  providers: [AccountsResolver],\n})\nexport class AccountsModule {}\n","import { Query, Resolver } from '@nestjs/graphql';\n\nimport { ResolveReference } from '@fsgme/distributed';\n\nconst users = [\n  {\n    id: \"1\",\n    name: \"Ada Lovelace\",\n    birthDate: \"1815-12-10\",\n    username: \"@ada\"\n  },\n  {\n    id: \"2\",\n    name: \"Alan Turing\",\n    birthDate: \"1912-06-23\",\n    username: \"@complete\"\n  }\n];\n\n@Resolver()\nexport class AccountsResolver {\n  @Query()\n  me() {\n    return users[0];\n  }\n\n  @Resolver('User')\n  @ResolveReference()\n  user({ id }: typeof users[0]) {\n    return users.find(user => user.id === id);\n  }\n}\n","import { NestFactory } from '@nestjs/core';\n\nimport { AccountsModule } from './app/accounts.module';\n\n(async () => {\n  const app = await NestFactory.create(AccountsModule);\n  await app.listen(4000);\n})();\n","// @TOD0: add support for code-first approach\n\n// @ts-ignore\nexport * from './lib/graphql-distributed-gateway.module';\nexport * from './lib/graphql-distributed.module';\nexport * from './lib/decorators';\n\n","export * from './resolve-reference.decorator';","import { SetMetadata } from '@nestjs/common';\nimport { RESOLVE_REFERENCE_METADATA } from '../tokens';\n\nexport function ResolveReference(): MethodDecorator {\n\treturn (target: Object | Function, key?: string | symbol, descriptor?: any) => {\n\t\tSetMetadata(RESOLVE_REFERENCE_METADATA, true)(target, key, descriptor);\n\t};\n}","import { DynamicModule, Inject, Module, OnModuleInit, Optional } from '@nestjs/common';\nimport { ApolloGateway } from '@apollo/gateway';\nimport { ApolloServer } from 'apollo-server-express';\nimport { HttpAdapterHost } from '@nestjs/core';\n\nimport { DISTRIBUTED_GATEWAY_BUILD_SERVICE, DISTRIBUTED_GATEWAY_OPTIONS } from './tokens';\nimport { BuildService, DistributedGatewayOptions } from './interfaces';\n\n@Module({})\nexport class GraphqlDistributedGatewayModule implements OnModuleInit {\n  private apolloServer: ApolloServer;\n\n  constructor(\n    @Optional()\n    private readonly httpAdapterHost: HttpAdapterHost,\n    @Optional() @Inject(DISTRIBUTED_GATEWAY_BUILD_SERVICE)\n    private readonly buildService: BuildService,\n    @Inject(DISTRIBUTED_GATEWAY_OPTIONS)\n    private readonly options: DistributedGatewayOptions,\n  ) {}\n\n  static forRoot(options: DistributedGatewayOptions): DynamicModule {\n    return {\n      module: GraphqlDistributedGatewayModule,\n      providers: [\n        {\n          provide: DISTRIBUTED_GATEWAY_OPTIONS,\n          useValue: options,\n        },\n      ],\n    };\n  }\n\n  async onModuleInit() {\n    if (!this.httpAdapterHost) return;\n    const { httpAdapter } = this.httpAdapterHost;\n\n    if (!httpAdapter) return;\n\n    const app = httpAdapter.getInstance();\n    const {\n      options: {\n        __exposeQueryPlanExperimental,\n        debug,\n        serviceList,\n        path,\n        disableHealthCheck,\n        onHealthCheck,\n        cors,\n        bodyParserConfig,\n        installSubscriptionHandlers,\n      },\n      buildService,\n    } = this;\n\n    const gateway = new ApolloGateway({\n      __exposeQueryPlanExperimental,\n      debug,\n      serviceList,\n      buildService,\n    });\n\n    const { schema, executor } = await gateway.load();\n\n    this.apolloServer = new ApolloServer({\n      executor,\n      schema,\n    });\n\n    this.apolloServer.applyMiddleware({\n      app,\n      path,\n      disableHealthCheck,\n      onHealthCheck,\n      cors,\n      bodyParserConfig,\n    });\n\n    if (installSubscriptionHandlers) {\n      this.apolloServer.installSubscriptionHandlers(\n        httpAdapter.getHttpServer(),\n      );\n    }\n  }\n}","import { Injectable } from '@nestjs/common';\nimport { ResolversExplorerService } from '@nestjs/graphql/dist/services/resolvers-explorer.service';\nimport { DelegatesExplorerService } from '@nestjs/graphql/dist/services/delegates-explorer.service';\nimport { GqlModuleOptions, GraphQLAstExplorer } from '@nestjs/graphql';\nimport { ScalarsExplorerService } from '@nestjs/graphql/dist/services/scalars-explorer.service';\nimport { GraphQLSchemaBuilder } from '@nestjs/graphql/dist/graphql-schema-builder';\nimport { extend } from '@nestjs/graphql/dist/utils/extend.util';\nimport { GraphQLSchema } from 'graphql';\nimport { gql, mergeSchemas, makeExecutableSchema } from 'apollo-server-express';\nimport { buildFederatedSchema, printSchema } from '@apollo/federation';\nimport { ReferencesExplorerService } from './services';\nimport { removeTempField } from '@nestjs/graphql/dist/utils/remove-temp.util';\n\n@Injectable()\nexport class GraphqlDistributedFactory {\n  constructor(\n    private readonly resolversExplorerService: ResolversExplorerService,\n    private readonly delegatesExplorerService: DelegatesExplorerService,\n    private readonly scalarsExplorerService: ScalarsExplorerService,\n    private readonly referencesExplorerService: ReferencesExplorerService,\n    private readonly graphqlAstExplorer: GraphQLAstExplorer,\n    private readonly gqlSchemaBuilder: GraphQLSchemaBuilder,\n  ) {}\n\n  private extendResolvers(resolvers: any[]) {\n    return resolvers.reduce((prev, curr) => extend(prev, curr), {});\n  }\n\n  async mergeOptions(options: GqlModuleOptions = {}): Promise<GqlModuleOptions> {\n    const resolvers = this.extendResolvers([\n      this.resolversExplorerService.explore(),\n      this.scalarsExplorerService.explore(),\n      this.referencesExplorerService.explore(),\n    ]);\n    // const referenceResolvers = this.referencesExplorerService.explore();\n    const typeDefs = gql`${options.typeDefs}`;\n\n\n    const executableSchema = makeExecutableSchema({\n      //resolvers: extend(typesResolvers, options.resolvers),\n      directiveResolvers: options.directiveResolvers,\n      schemaDirectives: options.schemaDirectives,\n      resolverValidationOptions: options.resolverValidationOptions,\n      typeDefs,\n    });\n\n    const federatedSchema = buildFederatedSchema([\n      {\n        typeDefs,\n        resolvers,\n      }\n    ]);\n\n    const schema = mergeSchemas({\n      schemas: [executableSchema, federatedSchema],\n    });\n\n    removeTempField(schema);\n    return {\n      ...options,\n      typeDefs: undefined,\n      schema,\n    };\n    /*if (options.autoSchemaFile) {\n      const autoGeneratedSchema: GraphQLSchema = await this.gqlSchemaBuilder.build(\n        options.autoSchemaFile,\n        options.buildSchemaOptions,\n        this.resolversExplorerService.getAllCtors(),\n      );\n\n      const executeableSchema = makeExecutableSchema({\n        resolvers: extend(resolvers, options.resolvers),\n        typeDefs: gql`\n          ${printSchema(autoGeneratedSchema)}\n        `,\n        resolverValidationOptions: {\n          ...(options.resolverValidationOptions || {}),\n          requireResolversForResolveType: false,\n        },\n      });\n    }*/\n  }\n}","import { DynamicModule, Inject, Module, OnModuleInit, Optional, Provider } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { GRAPHQL_MODULE_ID, GRAPHQL_MODULE_OPTIONS } from '@nestjs/graphql/dist/graphql.constants';\nimport { ApolloServer } from 'apollo-server-express';\nimport { mergeDefaults } from '@nestjs/graphql/dist/utils/merge-defaults.util';\nimport { generateString } from '@nestjs/graphql/dist/utils/generate-token.util';\nimport { GraphQLSchemaBuilder } from '@nestjs/graphql/dist/graphql-schema-builder';\nimport { ScalarsExplorerService } from '@nestjs/graphql/dist/services/scalars-explorer.service';\nimport { DelegatesExplorerService } from '@nestjs/graphql/dist/services/delegates-explorer.service';\nimport { ResolversExplorerService } from '@nestjs/graphql/dist/services/resolvers-explorer.service';\nimport { MetadataScanner } from '@nestjs/core/metadata-scanner';\nimport { extend } from '@nestjs/graphql/dist/utils/extend.util';\nimport { printSchema } from '@apollo/federation';\nimport {\n  GqlModuleAsyncOptions,\n  GqlModuleOptions,\n  GqlOptionsFactory,\n  GraphQLAstExplorer,\n  GraphQLFactory,\n  GraphQLTypesLoader,\n} from '@nestjs/graphql';\n\nimport { GraphqlDistributedFactory } from './graphql-distributed.factory';\nimport { ReferencesExplorerService } from './services';\n\n@Module({\n  providers: [\n    GraphqlDistributedFactory,\n    GraphQLFactory,\n    MetadataScanner,\n    ResolversExplorerService,\n    DelegatesExplorerService,\n    ScalarsExplorerService,\n    ReferencesExplorerService,\n    GraphQLAstExplorer,\n    GraphQLTypesLoader,\n    GraphQLSchemaBuilder,\n  ],\n  exports: [GraphQLTypesLoader, GraphQLAstExplorer],\n})\nexport class GraphqlDistributedModule implements OnModuleInit {\n  private apolloServer: ApolloServer;\n\n  constructor(\n    @Optional()\n    private readonly httpAdapterHost: HttpAdapterHost,\n    @Inject(GRAPHQL_MODULE_OPTIONS)\n    private readonly options: GqlModuleOptions,\n    private readonly graphqlFactory: GraphQLFactory,\n    private readonly graphqlDistributedFactory: GraphqlDistributedFactory,\n    private readonly graphqlTypesLoader: GraphQLTypesLoader,\n  ) {}\n\n  static forRoot(options: GqlModuleOptions = {}): DynamicModule {\n    options = mergeDefaults(options);\n    return {\n      module: GraphqlDistributedModule,\n      providers: [\n        {\n          provide: GRAPHQL_MODULE_OPTIONS,\n          useValue: options,\n        },\n      ],\n    };\n  }\n\n  static forRootAsync(options: GqlModuleAsyncOptions): DynamicModule {\n    return {\n      module: GraphqlDistributedModule,\n      imports: options.imports,\n      providers: [\n        ...this.createAsyncProviders(options),\n        {\n          provide: GRAPHQL_MODULE_ID,\n          useValue: generateString(),\n        },\n      ],\n    };\n  }\n\n  private static createAsyncProviders(\n    options: GqlModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  private static createAsyncOptionsProvider(\n    options: GqlModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: GRAPHQL_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    }\n\n    return {\n      provide: GRAPHQL_MODULE_OPTIONS,\n      useFactory: (optionsFactory: GqlOptionsFactory) => optionsFactory.createGqlOptions(),\n      inject: [options.useExisting || options.useClass],\n    };\n  }\n\n  async onModuleInit() {\n    if (!this.httpAdapterHost) return;\n    const { httpAdapter } = this.httpAdapterHost;\n\n    if (!httpAdapter) return;\n\n    const {\n      path,\n      disableHealthCheck,\n      onHealthCheck,\n      cors,\n      bodyParserConfig,\n    } = this.options;\n    const app = httpAdapter.getInstance();\n\n    const typeDefs =\n      (await this.graphqlTypesLoader.mergeTypesByPaths(\n        this.options.typePaths,\n      )) || [];\n\n    const mergedTypeDefs = extend(typeDefs, this.options.typeDefs);\n    const apolloOptions = await this.graphqlDistributedFactory.mergeOptions({\n      ...this.options,\n      typeDefs: mergedTypeDefs,\n    });\n\n    if (this.options.definitions && this.options.definitions.path) {\n      await this.graphqlFactory.generateDefinitions(\n        printSchema(apolloOptions.schema),\n        this.options,\n      );\n    }\n\n    this.apolloServer = new ApolloServer(apolloOptions as any);\n    this.apolloServer.applyMiddleware({\n      app,\n      path,\n      disableHealthCheck,\n      onHealthCheck,\n      cors,\n      bodyParserConfig,\n    });\n\n    if (this.options.installSubscriptionHandlers) {\n      // TL;DR <https://github.com/apollographql/apollo-server/issues/2776>\n      throw new Error('No support for subscriptions yet');\n      /*this.apolloServer.installSubscriptionHandlers(\n        httpAdapter.getHttpServer(),\n      );*/\n    }\n  }\n}","export * from './distributed-gateway-options.interface';","export * from './references-explorer.service';","import { Inject, Injectable, Type } from '@nestjs/common';\nimport { BaseExplorerService } from '@nestjs/graphql/dist/services/base-explorer.service';\nimport { ModulesContainer } from '@nestjs/core';\nimport { MetadataScanner } from '@nestjs/core/metadata-scanner';\nimport {\n\tGRAPHQL_MODULE_OPTIONS, PARAM_ARGS_METADATA,\n\tRESOLVER_NAME_METADATA,\n\tRESOLVER_TYPE_METADATA,\n} from '@nestjs/graphql/dist/graphql.constants';\nimport { GqlModuleOptions } from '@nestjs/graphql';\nimport { ResolverMetadata } from '@nestjs/graphql/dist/interfaces/resolver-metadata.interface';\nimport { RESOLVE_REFERENCE_KEY, RESOLVE_REFERENCE_METADATA } from '../tokens';\nimport { identity } from 'rxjs';\nimport { Module } from '@nestjs/core/injector/module';\nimport { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';\nimport { ExternalContextCreator } from '@nestjs/core/helpers/external-context-creator';\nimport { GqlParamsFactory } from '@nestjs/graphql/dist/factories/params.factory';\n\n@Injectable()\nexport class ReferencesExplorerService extends BaseExplorerService {\n\tprivate readonly gqlParamsFactory = new GqlParamsFactory();\n\n\tconstructor(\n\t\tprivate readonly modulesContainer: ModulesContainer,\n\t\tprivate readonly metadataScanner: MetadataScanner,\n\t\tprivate readonly externalContextCreator: ExternalContextCreator,\n\t\t@Inject(GRAPHQL_MODULE_OPTIONS)\n\t\tprivate readonly gqlOptions: GqlModuleOptions,\n\t) {\n\t\tsuper();\n\t}\n\n\texplore() {\n\t\tconst modules = this.getModules(\n\t\t\tthis.modulesContainer,\n\t\t\tthis.gqlOptions.include || [],\n\t\t);\n\n\t\tconst references  = this.flatMap(modules, (wrapper, moduleRef) => {\n\t\t\treturn wrapper.instance && this.filterReferences(wrapper, moduleRef);\n\t\t});\n\n\t\treturn this.groupMetadata(references);\n\t}\n\n\tprivate predicate(instance: Object, prototype: any, methodName: string): ResolverMetadata {\n    const callback = prototype[methodName];\n\t\tconst isResolverReference = Reflect.getMetadata(RESOLVE_REFERENCE_METADATA, callback);\n\n\t\tif (!isResolverReference) return null;\n\n\t\tconst resolverType =\n\t\t\tReflect.getMetadata(RESOLVER_TYPE_METADATA, callback) ||\n\t\t\tReflect.getMetadata(RESOLVER_TYPE_METADATA, instance.constructor);\n\n\t\treturn {\n\t\t\tname: RESOLVE_REFERENCE_KEY, // probably should be __resolveReference\n\t\t\ttype: resolverType,\n\t\t\tmethodName,\n\t\t};\n\t}\n\n\tprivate filterReferences(\n\t\twrapper: InstanceWrapper,\n\t\tmoduleRef: Module,\n\t): ResolverMetadata[] {\n\t\tconst { instance } = wrapper;\n\n\t\tconst prototype = Object.getPrototypeOf(instance);\n\t\tconst resolvers = this.metadataScanner.scanFromPrototype(\n\t\t\tinstance,\n\t\t\tprototype,\n\t\t\tname => this.predicate(instance, prototype, name),\n\t\t);\n\n\t\treturn resolvers\n\t\t\t.filter(resolver => !!resolver)\n\t\t\t.map(resolver => {\n\t\t\t\tconst createContext = (transform?: Function) => {\n\t\t\t\t\treturn this.createContextCallback(\n\t\t\t\t\t\tinstance,\n\t\t\t\t\t\tprototype,\n\t\t\t\t\t\twrapper,\n\t\t\t\t\t\tmoduleRef,\n\t\t\t\t\t\tresolver,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttransform,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\t...resolver,\n\t\t\t\t\tcallback: createContext(),\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tprivate createContextCallback<T extends Object>(\n\t\tinstance: T,\n\t\tprototype: any,\n\t\twrapper: InstanceWrapper,\n\t\tmoduleRef: Module,\n\t\tresolver: ResolverMetadata,\n\t\tisRequestScoped: boolean,\n\t\ttransform: Function = identity,\n\t) {\n\t\treturn this.externalContextCreator.create(\n\t\t\tinstance,\n\t\t\tprototype[resolver.methodName],\n\t\t\tresolver.methodName,\n\t\t\tPARAM_ARGS_METADATA,\n\t\t\tthis.gqlParamsFactory,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t);\n\t}\n}","export const RESOLVE_REFERENCE_METADATA = Symbol('RESOLVE_REFERENCE_METADATA');\nexport const DISTRIBUTED_GATEWAY_OPTIONS = Symbol('DISTRIBUTED_GATEWAY_OPTIONS');\nexport const DISTRIBUTED_GATEWAY_BUILD_SERVICE = Symbol('DISTRIBUTED_GATEWAY_BUILD_SERVICE');\n\nexport const RESOLVE_REFERENCE_KEY = '__resolveReference';","module.exports = require(\"@apollo/federation\");","module.exports = require(\"@apollo/gateway\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/core/helpers/external-context-creator\");","module.exports = require(\"@nestjs/core/metadata-scanner\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/graphql/dist/factories/params.factory\");","module.exports = require(\"@nestjs/graphql/dist/graphql-schema-builder\");","module.exports = require(\"@nestjs/graphql/dist/graphql.constants\");","module.exports = require(\"@nestjs/graphql/dist/services/base-explorer.service\");","module.exports = require(\"@nestjs/graphql/dist/services/delegates-explorer.service\");","module.exports = require(\"@nestjs/graphql/dist/services/resolvers-explorer.service\");","module.exports = require(\"@nestjs/graphql/dist/services/scalars-explorer.service\");","module.exports = require(\"@nestjs/graphql/dist/utils/extend.util\");","module.exports = require(\"@nestjs/graphql/dist/utils/generate-token.util\");","module.exports = require(\"@nestjs/graphql/dist/utils/merge-defaults.util\");","module.exports = require(\"@nestjs/graphql/dist/utils/remove-temp.util\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"rxjs\");","module.exports = require(\"tslib\");"],"sourceRoot":""}